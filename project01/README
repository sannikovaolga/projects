Проект №1 — Введение

Тестирование и тестировщики

Что же такое тестирование? Тестирование — это процесс оценки программного продукта на предмет его соответствия поставленным требованиям. Под требованиями в свою очередь мы будем понимать спецификацию того, что должно быть реализовано.
Зачем проводится тестирование? Попробуем сформулировать это так:
- чтобы повысить вероятность того, что приложение, предназначенное для тестирования, будет работать правильно при любых обстоятельствах;
- чтобы повысить вероятность того, что приложение, предназначенное для тестирования, будет соответствовать всем описанным требованиям;
- чтобы иметь представление о состоянии продукта на данный момент;
- чтобы выявить ситуации, в которых поведение программы является неправильным или не соответствующим спецификации.

Соответственно, тестировщиком называют человека, который осуществляет это тестирование, проверяя какой-либо программный продукт.

QA, QC

Часто в сфере тестирования можно встретить такие понятия, как Quality Assurance (обеспечение качества) и Quality Control (контроль качества). Давай разберёмся, что это такое и чем они отличаются от обычного тестирования.
Quality Control (QC) — обеспечивает проверку продукта не только на соответствие требованиям, но и на соответствие заранее согласованному уровню качества продукта и готовность к выпуску продукта в эксплуатацию.
Quality Assurance (QA) — это не только и не столько тестирование, будь то ручное или автоматизированное, это набор методик и подходов, предназначенных для выявления и контроля всех несоответствий качества программных продуктов. То есть QA включает в себя QC. QA должно обеспечивать методы и технологии всех участников процесса создания ПО, чтобы в итоге получить качественный веб-продукт.
Тогда можно сказать, что тестирование является одной из техник контроля качества, включающая в себя активности по планированию работ (Test Management), проектированию тестов (Test Design), выполнению тестирования (Test Execution) и анализу полученных результатов (Test Analysis).

Задание №1. Виды тестирования

В этом задании тебе нужно найти информацию про различные виды тестирования. Существует множество оснований, по которым можно классифицировать виды тестирования ПО — уровень, функциональность, позитивность и другие. Сейчас мы ограничимся следующими:

По уровню тестирования:
- модульное тестирование;
- интеграционное тестирование;
- системное тестирование.

По степени автоматизации:
- ручное тестирование;
- полуавтоматизированное тестирование;
- автоматизированние тестирование.

Уровни тестирования

Существуют четыре уровня тестирования:
- Модульное (оно же компонентное) тестирование;
- Интеграционное тестирование;
- Системное тестирование;
- И ещё один уровень тестирования, который ты ещё не рассматривал в предыдущем задании, — приемочное тестирование — тестирование, проводимое при сдаче продукта заказчику. Целью приемочного тестирования является определение готовности программного продукта к использованию конечными пользователями. Набор тест-кейсов и сценариев разрабатывается на основании требований к данному приложению.

Стандарты

Многие организации во всем мире разрабатывают и внедряют различные стандарты для повышения качества своих программ. Рассмотрим самые используемые из них:
- ISO / IEC 9126 (рассматриваются различные аспекты для определения качества программного приложения)
- ISO / IEC 9241-11 (рассматривается степень, в которой продукт может использоваться указанными пользователями для достижения определенных целей)
- ISO / IEC 25000: 2005 (рекомендации по требованиям и оценке качества программного обеспечения — SQuaRE)
- ISO / IEC 12119 (о пакетах программного обеспечения, поставляемых клиенту)
- IEEE 829 (стандарт для формата документов, используемых на разных этапах тестирования программного обеспечения)
- IEEE 1008 (стандарт для модульного тестирования)
- IEEE 1059 (руководство по планам проверки и валидации программного обеспечения)
- IEEE 1061 (методология определения требований к качеству, метрики)
- BS 7925-1 (словарь терминов, используемых при тестировании программного обеспечения)
- BS 7925-2 (стандарт для тестирования компонентов программного обеспечения)

Задание №2. Тестирование в разработке

Пользуясь дополнительной литературой, а также информацией из интернета, опиши в этом файле: каким образом, на каких стадиях жизненного цикла ПО и кем может проводиться каждый из описанных выше уровней тестирования. Озаглавь свои идеи заголовком # Уровни тестирования.

-------------------------------

Конечно, в сфере IT есть множество своих терминов, которые рядовому тестировщику необходимо знать. В ходе курса мы потихоньку будем разбираться с каждым из них, а сейчас начнём разговор с самых простых и базовых вещей — модальные окна (модалки) и чек-боксы.

Модальные окна
Модальное (или всплывающее) окно — это элементы интерфейса, которые открываются поверх текущей страницы, требующие отклика пользователя. Самым простым примером модального окна является окно подтверждения. Например, ты хочешь удалить какое-нибудь сообщение в чате, тогда "всплывёт" модальное окно с просьбой подтвердить действие. Пример более сложных модальных окон — это окна авторизации и регистрации, которые требуют не только нажатия на одну из предложенных кнопок, но также заполнения текстовых полей.

Чек-боксы
Чек-бокс тебе может быть знаком под другим названием — флажок/галочка. Флажок, флаговая кнопка, чекбокс, галочка — это элемент графического пользовательского интерфейса, позволяющий пользователю управлять параметром с двумя состояниями — включено и отключено (галочка стоит, либо галочки нет).

Задание №3. Модальное окно авторизации

Перейди на сайт https://sbermarket.ru/, потом найди на сайте модальное окно авторизации. Подобная форма есть во всех приложениях и веб-сервисах. Рассмотрим ситуацию, когда нет никакой документации (требований и технического задания) к данной форме. В файле exercise3.md опиши, за что отвечает каждая кнопка и каждый чек-бокс. К чему приводит нажатие на каждую функциональную часть модального окна? Что происходит, когда ты наводишь курсор на какую-нибудь кнопку?
В md-файле не забывай добавлять заголовки к своему тексту, чтобы разделить его по функционалу приложения.
